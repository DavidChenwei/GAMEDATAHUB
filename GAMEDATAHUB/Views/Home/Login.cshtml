@model GAMEDATAHUB.Models.UserModel
@{
    ViewBag.Title = "Login";
}

@Styles.Render("~/Content/login")


<body>
    <div class="Login-area">
        <div class="shell">
            <div class="container a-container" id="a-container">
                @using (Html.BeginForm("Login", "Home", FormMethod.Post, new { @id = "a-form", @class = "form", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("IsLogin", false)
                    <h2 class="form_title title">Create Account</h2>
                    @Html.TextBoxFor(x => x.UserName, new { @class = "form_input", @placeholder = "Name" })
                    @Html.ValidationMessageFor(x => x.UserName)
                    @Html.TextBoxFor(x => x.UserEmail, new { @class = "form_input", @placeholder = "Email" })
                    @Html.ValidationMessageFor(x => x.UserEmail)
                    @Html.TextBoxFor(x => x.UserPassword, new { @class = "form_input", @type = "password", @placeholder = "Password" })
                    @Html.ValidationMessageFor(x => x.UserPassword)
                    <button type="submit" class="switch_button button">SIGN UP</button>
                }
            </div>

             <div class="container b-container" id="b-container">
                 @using (Html.BeginForm("Login", "Home", FormMethod.Post, new { @id = "b-form", @class = "form", role = "form" }))
                 {
                     @Html.AntiForgeryToken()
                     @Html.Hidden("IsLogin", true)
                     <h2 class="form_title title">Login</h2>
                     @Html.TextBoxFor(x => x.UserName, new { @class = "form_input", @placeholder = "Name" })
                     @Html.ValidationMessageFor(x => x.UserName)
                     @Html.TextBoxFor(x => x.UserPassword, new { @class = "form_input", @type = "password", @placeholder = "Password" })
                     @Html.ValidationMessageFor(x => x.UserPassword)
                     <button type="submit" class="switch_button button">SIGN IN</button>
                 }
             </div>

            <div class="switch" id="switch-cnt">
                <div class="switch_circle"></div>
                <div class="switch_circle switch_circle-t"></div>
                <div class="switch_container" id="switch-c1">
                    <h2 class="switch_title title" style="letter-spacing: 0;">Welcome Back!</h2>
                    <p class="switch_description description">Already have an accout? Sign In</p>
                    <button class="switch_button button switch-btn">SIGN IN</button>
                </div>

                <div class="switch_container is-hidden" id="switch-c2">
                    <h2 class="switch_title title" style="letter-spacing: 0;">Hello Hero!</h2>
                    <p class="switch_description description">Sign Up! Find more!</p>
                    <button class="switch_button button switch-btn">SIGN UP</button>
                </div>
            </div>
        </div>
    </div>

</body>
<script>
    let switchCtn = document.querySelector("#switch-cnt");
    let switchC1 = document.querySelector("#switch-c1");
    let switchC2 = document.querySelector("#switch-c2");
    let switchCircle = document.querySelectorAll(".switch_circle");
    let switchBtn = document.querySelectorAll(".switch-btn");
    let aContainer = document.querySelector("#a-container");
    let bContainer = document.querySelector("#b-container");
    let allButtons = document.querySelectorAll(".submit");

    let getButtons = (e) => e.preventDefault()
    let changeForm = (e) => {
        switchCtn.classList.add("is-gx");
        setTimeout(function () {
            switchCtn.classList.remove("is-gx");
        }, 1500)
        switchCtn.classList.toggle("is-txr");
        switchCircle[0].classList.toggle("is-txr");
        switchCircle[1].classList.toggle("is-txr");

        switchC1.classList.toggle("is-hidden");
        switchC2.classList.toggle("is-hidden");
        aContainer.classList.toggle("is-txl");
        bContainer.classList.toggle("is-txl");
        bContainer.classList.toggle("is-z");
    }

    let shell = (e) => {
        for (var i = 0; i < allButtons.length; i++)
            allButtons[i].addEventListener("click", getButtons);
        for (var i = 0; i < switchBtn.length; i++)
            switchBtn[i].addEventListener("click", changeForm)
    }
    window.addEventListener("load", shell);

</script>

